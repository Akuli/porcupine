# TODO: distinguish between variables and attributes?
# Can't just add "attribute" to dont_recurse_inside because then the object
# whose attribute it is won't highlight, e.g. open("foo", "rb").read()

queries:
  string: |
    # Highlight all strings with Token.Literal.String
    (string) @Token.Literal.String

    # Recurse into only the len(x) part of f"blah {len(x)!r}".
    # That makes the meaning of !r obvious: it is string syntax, not a part of the expression inside.
    #
    # Here "expression" is a supertype node, see query syntax docs.
    # There doesn't seem to be any way to say "anything except the !r part".
    (string (interpolation (expression) @recurse))

  function_definition: |
    (function_definition
      ("async")? @Token.Keyword
      ("def") @Token.Keyword
      name: (identifier) @Token.Name.Function
      parameters: (parameters) @recurse
      ("->")? @Token.Punctuation
      return_type: (type)? @recurse
      (":") @Token.Punctuation
      (comment)? @Token.Comment
      body: (_) @recurse
    )

  class_definition: |
    (class_definition
      ("class") @Token.Keyword
      name: (identifier) @Token.Name.Function
      superclasses: (argument_list)? @recurse
      (":") @Token.Punctuation
      (comment)? @Token.Comment
      body: (_) @recurse
    )

  decorated_definition: |
    (decorated_definition
      (decorator
        ("@") @Token.Name.Decorator
        (identifier)? @Token.Name.Decorator     # @foo
        (attribute)? @Token.Name.Decorator      # @foo.bar
        (call
          function: (identifier)? @Token.Name.Decorator   # @foo()
          function: (attribute)? @Token.Name.Decorator    # @foo.bar()
          function: (call
            function: (identifier)? @Token.Name.Decorator   # @foo()()
            function: (attribute)? @Token.Name.Decorator    # @foo.bar()()
            # I think two levels deep is enough
            arguments: (_) @recurse
          )?
          arguments: (_) @recurse
        )?
      )
      definition: (_) @recurse
    )
    

token_mapping:
  comment: Token.Comment

  # TODO: which of these are needed?
  integer: Token.Literal.Number.Integer
  float: Token.Literal.Number.Float

  'true': Token.Keyword.Constant
  'false': Token.Keyword.Constant
  none: Token.Keyword.Constant
  
  ellipsis: Token.Name.Builtin.Pseudo

  # Keywords
  and: Token.Keyword
  as: Token.Keyword
  assert: Token.Keyword
  async: Token.Keyword
  await: Token.Keyword
  break: Token.Keyword
  case: Token.Keyword
  class: Token.Keyword
  continue: Token.Keyword
  del: Token.Keyword
  def: Token.Keyword
  elif: Token.Keyword
  else: Token.Keyword
  except: Token.Keyword
  finally: Token.Keyword
  for: Token.Keyword
  from: Token.Keyword
  global: Token.Keyword
  if: Token.Keyword
  import: Token.Keyword
  in: Token.Keyword
  is: Token.Keyword
  lambda: Token.Keyword
  match: Token.Keyword
  nonlocal: Token.Keyword
  not: Token.Keyword
  or: Token.Keyword
  pass: Token.Keyword
  raise: Token.Keyword
  return: Token.Keyword
  try: Token.Keyword
  while: Token.Keyword
  with: Token.Keyword
  yield: Token.Keyword

  # Operators
  '!=': Token.Operator
  '==': Token.Operator
  '<': Token.Operator
  '>': Token.Operator
  '<=': Token.Operator
  '>=': Token.Operator
  '+=': Token.Operator
  '-=': Token.Operator
  '*=': Token.Operator
  '/=': Token.Operator
  '@=': Token.Operator
  '//=': Token.Operator
  '%=': Token.Operator
  '**=': Token.Operator
  '<<=': Token.Operator
  '>>=': Token.Operator
  '&=': Token.Operator
  '^=': Token.Operator
  '|=': Token.Operator
  '+': Token.Operator
  '-': Token.Operator
  '*': Token.Operator
  '/': Token.Operator
  '@': Token.Operator
  '//': Token.Operator
  '%': Token.Operator
  '**': Token.Operator
  '<<': Token.Operator
  '>>': Token.Operator
  '&': Token.Operator
  '^': Token.Operator
  '|': Token.Operator
  '~': Token.Operator
  '=': Token.Operator
  ':=': Token.Operator

  # Punctuation
  '(': Token.Punctuation
  ')': Token.Punctuation
  '[': Token.Punctuation
  ']': Token.Punctuation
  '{': Token.Punctuation
  '}': Token.Punctuation
  '.': Token.Punctuation
  ',': Token.Punctuation
  ':': Token.Punctuation
  ';': Token.Punctuation

  identifier:
    # Exceptions
    ArithmeticError: Token.Name.Exception
    AssertionError: Token.Name.Exception
    AttributeError: Token.Name.Exception
    BaseException: Token.Name.Builtin
    BlockingIOError: Token.Name.Exception
    BrokenPipeError: Token.Name.Exception
    BufferError: Token.Name.Exception
    BytesWarning: Token.Name.Builtin
    ChildProcessError: Token.Name.Exception
    ConnectionAbortedError: Token.Name.Exception
    ConnectionError: Token.Name.Exception
    ConnectionRefusedError: Token.Name.Exception
    ConnectionResetError: Token.Name.Exception
    DeprecationWarning: Token.Name.Builtin
    EOFError: Token.Name.Exception
    EncodingWarning: Token.Name.Builtin
    EnvironmentError: Token.Name.Exception
    Exception: Token.Name.Builtin
    FileExistsError: Token.Name.Exception
    FileNotFoundError: Token.Name.Exception
    FloatingPointError: Token.Name.Exception
    FutureWarning: Token.Name.Builtin
    GeneratorExit: Token.Name.Builtin
    IOError: Token.Name.Exception
    ImportError: Token.Name.Exception
    ImportWarning: Token.Name.Builtin
    IndentationError: Token.Name.Exception
    IndexError: Token.Name.Exception
    InterruptedError: Token.Name.Exception
    IsADirectoryError: Token.Name.Exception
    KeyError: Token.Name.Exception
    KeyboardInterrupt: Token.Name.Builtin
    LookupError: Token.Name.Exception
    MemoryError: Token.Name.Exception
    ModuleNotFoundError: Token.Name.Exception
    NameError: Token.Name.Exception
    NotADirectoryError: Token.Name.Exception
    NotImplementedError: Token.Name.Exception
    OSError: Token.Name.Exception
    OverflowError: Token.Name.Exception
    PendingDeprecationWarning: Token.Name.Builtin
    PermissionError: Token.Name.Exception
    ProcessLookupError: Token.Name.Exception
    RecursionError: Token.Name.Exception
    ReferenceError: Token.Name.Exception
    ResourceWarning: Token.Name.Builtin
    RuntimeError: Token.Name.Exception
    RuntimeWarning: Token.Name.Builtin
    StopAsyncIteration: Token.Name.Builtin
    StopIteration: Token.Name.Builtin
    SyntaxError: Token.Name.Exception
    SyntaxWarning: Token.Name.Builtin
    SystemError: Token.Name.Exception
    SystemExit: Token.Name.Builtin
    TabError: Token.Name.Exception
    TimeoutError: Token.Name.Exception
    TypeError: Token.Name.Exception
    UnboundLocalError: Token.Name.Exception
    UnicodeDecodeError: Token.Name.Exception
    UnicodeEncodeError: Token.Name.Exception
    UnicodeError: Token.Name.Exception
    UnicodeTranslateError: Token.Name.Exception
    ValueError: Token.Name.Exception
    ZeroDivisionError: Token.Name.Exception
    UnicodeWarning: Token.Name.Builtin
    UserWarning: Token.Name.Builtin
    Warning: Token.Name.Builtin
    
    # Builtins
    __import__: Token.Name.Builtin
    abs: Token.Name.Builtin
    all: Token.Name.Builtin
    any: Token.Name.Builtin
    ascii: Token.Name.Builtin
    bin: Token.Name.Builtin
    bool: Token.Name.Builtin
    breakpoint: Token.Name.Builtin
    bytearray: Token.Name.Builtin
    bytes: Token.Name.Builtin
    callable: Token.Name.Builtin
    chr: Token.Name.Builtin
    classmethod: Token.Name.Builtin
    compile: Token.Name.Builtin
    complex: Token.Name.Builtin
    delattr: Token.Name.Builtin
    dict: Token.Name.Builtin
    dir: Token.Name.Builtin
    divmod: Token.Name.Builtin
    enumerate: Token.Name.Builtin
    eval: Token.Name.Builtin
    exec: Token.Name.Builtin
    exit: Token.Name.Builtin
    filter: Token.Name.Builtin
    float: Token.Name.Builtin
    format: Token.Name.Builtin
    frozenset: Token.Name.Builtin
    getattr: Token.Name.Builtin
    globals: Token.Name.Builtin
    hasattr: Token.Name.Builtin
    hash: Token.Name.Builtin
    help: Token.Name.Builtin
    hex: Token.Name.Builtin
    id: Token.Name.Builtin
    input: Token.Name.Builtin
    int: Token.Name.Builtin
    isinstance: Token.Name.Builtin
    issubclass: Token.Name.Builtin
    iter: Token.Name.Builtin
    len: Token.Name.Builtin
    list: Token.Name.Builtin
    locals: Token.Name.Builtin
    map: Token.Name.Builtin
    max: Token.Name.Builtin
    memoryview: Token.Name.Builtin
    min: Token.Name.Builtin
    next: Token.Name.Builtin
    object: Token.Name.Builtin
    oct: Token.Name.Builtin
    open: Token.Name.Builtin
    ord: Token.Name.Builtin
    pow: Token.Name.Builtin
    print: Token.Name.Builtin
    property: Token.Name.Builtin
    quit: Token.Name.Builtin
    range: Token.Name.Builtin
    repr: Token.Name.Builtin
    reversed: Token.Name.Builtin
    round: Token.Name.Builtin
    set: Token.Name.Builtin
    setattr: Token.Name.Builtin
    slice: Token.Name.Builtin
    sorted: Token.Name.Builtin
    staticmethod: Token.Name.Builtin
    str: Token.Name.Builtin
    sum: Token.Name.Builtin
    super: Token.Name.Builtin
    tuple: Token.Name.Builtin
    type: Token.Name.Builtin
    vars: Token.Name.Builtin
    zip: Token.Name.Builtin

    # builtin.Pseudo
    self: Token.Name.Builtin.Pseudo
    cls: Token.Name.Builtin.Pseudo
    Ellipsis: Token.Name.Builtin.Pseudo
    NotImplemented: Token.Name.Builtin.Pseudo
    reveal_type: Token.Name.Builtin.Pseudo

    # Magic variables
    __annotations__: Token.Name.Variable.Magic
    __bases__: Token.Name.Variable.Magic
    __class__: Token.Name.Variable.Magic
    __closure__: Token.Name.Variable.Magic
    __code__: Token.Name.Variable.Magic
    __debug__: Token.Name.Variable.Magic
    __defaults__: Token.Name.Variable.Magic
    __dict__: Token.Name.Variable.Magic
    __doc__: Token.Name.Variable.Magic
    __file__: Token.Name.Variable.Magic
    __func__: Token.Name.Variable.Magic
    __globals__: Token.Name.Variable.Magic
    __kwdefaults__: Token.Name.Variable.Magic
    __loader__: Token.Name.Variable.Magic
    __module__: Token.Name.Variable.Magic
    __mro__: Token.Name.Variable.Magic
    __name__: Token.Name.Variable.Magic
    __objclass__: Token.Name.Variable.Magic
    __package__: Token.Name.Variable.Magic
    __path__: Token.Name.Variable.Magic
    __qualname__: Token.Name.Variable.Magic
    __self__: Token.Name.Variable.Magic
    __slots__: Token.Name.Variable.Magic
    __spec__: Token.Name.Variable.Magic
    __weakref__: Token.Name.Variable.Magic
